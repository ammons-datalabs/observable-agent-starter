[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "observable-agent-starter"
version = "0.1.0"
description = "Production-ready Python agent starter with built-in observability, evals, and CI."
readme = "README.md"
license = { text = "MIT" }
authors = [
  { name = "Observable Agent Starter Maintainers" }
]
requires-python = ">=3.10"
dependencies = [
  "dspy-ai",
  "langfuse",
  "langchain",
  "langgraph",
  "langchain-mcp-adapters",
  "jinja2",
  "fastapi",
  "uvicorn[standard]"
]

[tool.hatch.build.targets.wheel]
packages = ["src/observable_agent_starter"]

[tool.hatch.build.targets.wheel.force-include]
prompts = "prompts"
evals = "evals"
mcp = "mcp"
examples = "examples"

[tool.hatch.build.targets.sdist]
include = [
  "src",
  "prompts",
  "evals",
  "mcp",
  "examples",
  "Dockerfile",
  "Makefile",
  "README.md"
]

[project.scripts]
oas-agent = "observable_agent_starter.agents.routing.__main__:main"

[project.optional-dependencies]
dev = [
  "deepeval",
  "pytest",
  "pyright",
  "ruff"
]
examples = [
  "pydantic>=2.6",
  "streamlit>=1.34"
]

[tool.pyright]
venvPath = "."
venv = ".venv"
exclude = [
  "examples/influencer_assistant"
]

[tool.ruff]
line-length = 100
src = [
  "src",
  "evals",
  "prompts",
  "examples"
]

[tool.pytest.ini_options]
addopts = "-q"
